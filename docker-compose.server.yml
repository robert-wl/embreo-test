services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      APP_ENV: "production"
      SERVER_PORT: ${SERVER_PORT}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      SELF_HOST: ${SELF_HOST}
      FRONTEND_URL: ${FRONTEND_URL}
      JWT_KEY: ${JWT_KEY}
    restart: unless-stopped
    depends_on:
      - database
    networks:
      - embreo

  database:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
    restart: unless-stopped
    networks:
      - embreo
    volumes:
      - postgres-data:/var/lib/postgresql/data

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_BACKEND_URL: ${VITE_BACKEND_URL}
    ports:
      - "5173:5173"
    environment:
      VITE_BACKEND_URL: ${VITE_BACKEND_URL}
    restart: unless-stopped
    networks:
      - embreo

networks:
  embreo:
    driver: bridge

volumes:
  postgres-data: